<투포인터 알고리즘>

원래 이중 for문으로 처리되는 O(N^2)을 2개의 포인터의 움직임으로 o(N)에 해결할 수 있는 알고리즘이다.
이중 for문인데 시간이 애매하다면 투포인터를 떠올려보도록 하자

1차원 배열에서 각자 다른 원소를 가리키고 있는 2개의 포인터를 조작해가면서 원하는 값을 찾을 때 까지 탐색하는 알고리즘이다.
리스트에 순차적으로 접근해야 할 때 두 개의 점(포인트)의 위치를 기록하면서 처리한다.

시간 복잡도 : O(N^2) => O(N) 으로 처리 가능

예시 : 특정한 합을 가지는 부분 연속 수열 찾기

비슷하게 슬라이딩 윈도우가 있는데, 슬라이딩 윈도우는 넓이나 길이가 일정하다

보통 lf, rg / st, en 으로 시작하고 lf = rg = 0이고 항상 lf <= rg 이다.

while(rg < N) 으로 시작하거나 while(lf <= rg) 로 한다.

서로 같은 곳에서 시작해서 같은 방향을 가는 방법
서로 다른 곳에서 시작해서 다른 방향으로 조여오는 방법이 있을 수 있다.

한 반복문에서 포인터를 꼭 하나씩 움직일 필요는 없다.
반복문 안에서 조건을 만족하면 다른 반복문을 통해 해당 조건을 만족할때까지 포인터를 옮겨주는 방법이 있을 수 있다.